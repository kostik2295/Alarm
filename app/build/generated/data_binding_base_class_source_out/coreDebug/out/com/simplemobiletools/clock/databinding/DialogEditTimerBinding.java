// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyAppCompatCheckbox;
import com.simplemobiletools.commons.views.MyTextInputLayout;
import com.simplemobiletools.commons.views.MyTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEditTimerBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText editTimer;

  @NonNull
  public final MyTextInputLayout editTimerHint;

  @NonNull
  public final ConstraintLayout editTimerHolder;

  @NonNull
  public final MyTextView editTimerInitialTime;

  @NonNull
  public final LinearLayout editTimerLabelHolder;

  @NonNull
  public final ImageView editTimerLabelImage;

  @NonNull
  public final ScrollView editTimerScrollview;

  @NonNull
  public final MyTextView editTimerSound;

  @NonNull
  public final MyAppCompatCheckbox editTimerVibrate;

  @NonNull
  public final RelativeLayout editTimerVibrateHolder;

  @NonNull
  public final ImageView editTimerVibrateIcon;

  private DialogEditTimerBinding(@NonNull ScrollView rootView, @NonNull TextInputEditText editTimer,
      @NonNull MyTextInputLayout editTimerHint, @NonNull ConstraintLayout editTimerHolder,
      @NonNull MyTextView editTimerInitialTime, @NonNull LinearLayout editTimerLabelHolder,
      @NonNull ImageView editTimerLabelImage, @NonNull ScrollView editTimerScrollview,
      @NonNull MyTextView editTimerSound, @NonNull MyAppCompatCheckbox editTimerVibrate,
      @NonNull RelativeLayout editTimerVibrateHolder, @NonNull ImageView editTimerVibrateIcon) {
    this.rootView = rootView;
    this.editTimer = editTimer;
    this.editTimerHint = editTimerHint;
    this.editTimerHolder = editTimerHolder;
    this.editTimerInitialTime = editTimerInitialTime;
    this.editTimerLabelHolder = editTimerLabelHolder;
    this.editTimerLabelImage = editTimerLabelImage;
    this.editTimerScrollview = editTimerScrollview;
    this.editTimerSound = editTimerSound;
    this.editTimerVibrate = editTimerVibrate;
    this.editTimerVibrateHolder = editTimerVibrateHolder;
    this.editTimerVibrateIcon = editTimerVibrateIcon;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditTimerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditTimerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_timer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditTimerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_timer;
      TextInputEditText editTimer = ViewBindings.findChildViewById(rootView, id);
      if (editTimer == null) {
        break missingId;
      }

      id = R.id.edit_timer_hint;
      MyTextInputLayout editTimerHint = ViewBindings.findChildViewById(rootView, id);
      if (editTimerHint == null) {
        break missingId;
      }

      id = R.id.edit_timer_holder;
      ConstraintLayout editTimerHolder = ViewBindings.findChildViewById(rootView, id);
      if (editTimerHolder == null) {
        break missingId;
      }

      id = R.id.edit_timer_initial_time;
      MyTextView editTimerInitialTime = ViewBindings.findChildViewById(rootView, id);
      if (editTimerInitialTime == null) {
        break missingId;
      }

      id = R.id.edit_timer_label_holder;
      LinearLayout editTimerLabelHolder = ViewBindings.findChildViewById(rootView, id);
      if (editTimerLabelHolder == null) {
        break missingId;
      }

      id = R.id.edit_timer_label_image;
      ImageView editTimerLabelImage = ViewBindings.findChildViewById(rootView, id);
      if (editTimerLabelImage == null) {
        break missingId;
      }

      ScrollView editTimerScrollview = (ScrollView) rootView;

      id = R.id.edit_timer_sound;
      MyTextView editTimerSound = ViewBindings.findChildViewById(rootView, id);
      if (editTimerSound == null) {
        break missingId;
      }

      id = R.id.edit_timer_vibrate;
      MyAppCompatCheckbox editTimerVibrate = ViewBindings.findChildViewById(rootView, id);
      if (editTimerVibrate == null) {
        break missingId;
      }

      id = R.id.edit_timer_vibrate_holder;
      RelativeLayout editTimerVibrateHolder = ViewBindings.findChildViewById(rootView, id);
      if (editTimerVibrateHolder == null) {
        break missingId;
      }

      id = R.id.edit_timer_vibrate_icon;
      ImageView editTimerVibrateIcon = ViewBindings.findChildViewById(rootView, id);
      if (editTimerVibrateIcon == null) {
        break missingId;
      }

      return new DialogEditTimerBinding((ScrollView) rootView, editTimer, editTimerHint,
          editTimerHolder, editTimerInitialTime, editTimerLabelHolder, editTimerLabelImage,
          editTimerScrollview, editTimerSound, editTimerVibrate, editTimerVibrateHolder,
          editTimerVibrateIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
