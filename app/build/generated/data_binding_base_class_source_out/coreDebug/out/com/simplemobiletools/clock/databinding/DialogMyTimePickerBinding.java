// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.shawnlin.numberpicker.NumberPicker;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogMyTimePickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MyTextView myTimePickerColonOne;

  @NonNull
  public final MyTextView myTimePickerColonTwo;

  @NonNull
  public final LinearLayout myTimePickerHolder;

  @NonNull
  public final NumberPicker myTimePickerHours;

  @NonNull
  public final NumberPicker myTimePickerMinutes;

  @NonNull
  public final NumberPicker myTimePickerSeconds;

  private DialogMyTimePickerBinding(@NonNull LinearLayout rootView,
      @NonNull MyTextView myTimePickerColonOne, @NonNull MyTextView myTimePickerColonTwo,
      @NonNull LinearLayout myTimePickerHolder, @NonNull NumberPicker myTimePickerHours,
      @NonNull NumberPicker myTimePickerMinutes, @NonNull NumberPicker myTimePickerSeconds) {
    this.rootView = rootView;
    this.myTimePickerColonOne = myTimePickerColonOne;
    this.myTimePickerColonTwo = myTimePickerColonTwo;
    this.myTimePickerHolder = myTimePickerHolder;
    this.myTimePickerHours = myTimePickerHours;
    this.myTimePickerMinutes = myTimePickerMinutes;
    this.myTimePickerSeconds = myTimePickerSeconds;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogMyTimePickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogMyTimePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_my_time_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogMyTimePickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.my_time_picker_colon_one;
      MyTextView myTimePickerColonOne = ViewBindings.findChildViewById(rootView, id);
      if (myTimePickerColonOne == null) {
        break missingId;
      }

      id = R.id.my_time_picker_colon_two;
      MyTextView myTimePickerColonTwo = ViewBindings.findChildViewById(rootView, id);
      if (myTimePickerColonTwo == null) {
        break missingId;
      }

      LinearLayout myTimePickerHolder = (LinearLayout) rootView;

      id = R.id.my_time_picker_hours;
      NumberPicker myTimePickerHours = ViewBindings.findChildViewById(rootView, id);
      if (myTimePickerHours == null) {
        break missingId;
      }

      id = R.id.my_time_picker_minutes;
      NumberPicker myTimePickerMinutes = ViewBindings.findChildViewById(rootView, id);
      if (myTimePickerMinutes == null) {
        break missingId;
      }

      id = R.id.my_time_picker_seconds;
      NumberPicker myTimePickerSeconds = ViewBindings.findChildViewById(rootView, id);
      if (myTimePickerSeconds == null) {
        break missingId;
      }

      return new DialogMyTimePickerBinding((LinearLayout) rootView, myTimePickerColonOne,
          myTimePickerColonTwo, myTimePickerHolder, myTimePickerHours, myTimePickerMinutes,
          myTimePickerSeconds);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
