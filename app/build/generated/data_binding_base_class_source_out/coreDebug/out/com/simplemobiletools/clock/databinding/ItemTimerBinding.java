// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTimerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout timerFrame;

  @NonNull
  public final MyTextView timerLabel;

  @NonNull
  public final ImageView timerPlayPause;

  @NonNull
  public final ImageView timerReset;

  @NonNull
  public final TextView timerTime;

  private ItemTimerBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout timerFrame,
      @NonNull MyTextView timerLabel, @NonNull ImageView timerPlayPause,
      @NonNull ImageView timerReset, @NonNull TextView timerTime) {
    this.rootView = rootView;
    this.timerFrame = timerFrame;
    this.timerLabel = timerLabel;
    this.timerPlayPause = timerPlayPause;
    this.timerReset = timerReset;
    this.timerTime = timerTime;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTimerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTimerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_timer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTimerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout timerFrame = (FrameLayout) rootView;

      id = R.id.timer_label;
      MyTextView timerLabel = ViewBindings.findChildViewById(rootView, id);
      if (timerLabel == null) {
        break missingId;
      }

      id = R.id.timer_play_pause;
      ImageView timerPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (timerPlayPause == null) {
        break missingId;
      }

      id = R.id.timer_reset;
      ImageView timerReset = ViewBindings.findChildViewById(rootView, id);
      if (timerReset == null) {
        break missingId;
      }

      id = R.id.timer_time;
      TextView timerTime = ViewBindings.findChildViewById(rootView, id);
      if (timerTime == null) {
        break missingId;
      }

      return new ItemTimerBinding((FrameLayout) rootView, timerFrame, timerLabel, timerPlayPause,
          timerReset, timerTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
