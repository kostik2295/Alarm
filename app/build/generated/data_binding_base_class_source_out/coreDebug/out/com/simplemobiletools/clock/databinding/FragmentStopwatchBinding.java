// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyRecyclerView;
import com.simplemobiletools.commons.views.MyTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStopwatchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout stopwatchFragment;

  @NonNull
  public final MyTextView stopwatchLap;

  @NonNull
  public final MyRecyclerView stopwatchList;

  @NonNull
  public final ImageView stopwatchPlayPause;

  @NonNull
  public final ImageView stopwatchReset;

  @NonNull
  public final ImageView stopwatchSortingIndicator1;

  @NonNull
  public final ImageView stopwatchSortingIndicator2;

  @NonNull
  public final ImageView stopwatchSortingIndicator3;

  @NonNull
  public final ConstraintLayout stopwatchSortingIndicatorsHolder;

  @NonNull
  public final MyTextView stopwatchTime;

  private FragmentStopwatchBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout stopwatchFragment, @NonNull MyTextView stopwatchLap,
      @NonNull MyRecyclerView stopwatchList, @NonNull ImageView stopwatchPlayPause,
      @NonNull ImageView stopwatchReset, @NonNull ImageView stopwatchSortingIndicator1,
      @NonNull ImageView stopwatchSortingIndicator2, @NonNull ImageView stopwatchSortingIndicator3,
      @NonNull ConstraintLayout stopwatchSortingIndicatorsHolder,
      @NonNull MyTextView stopwatchTime) {
    this.rootView = rootView;
    this.stopwatchFragment = stopwatchFragment;
    this.stopwatchLap = stopwatchLap;
    this.stopwatchList = stopwatchList;
    this.stopwatchPlayPause = stopwatchPlayPause;
    this.stopwatchReset = stopwatchReset;
    this.stopwatchSortingIndicator1 = stopwatchSortingIndicator1;
    this.stopwatchSortingIndicator2 = stopwatchSortingIndicator2;
    this.stopwatchSortingIndicator3 = stopwatchSortingIndicator3;
    this.stopwatchSortingIndicatorsHolder = stopwatchSortingIndicatorsHolder;
    this.stopwatchTime = stopwatchTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStopwatchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStopwatchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_stopwatch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStopwatchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout stopwatchFragment = (ConstraintLayout) rootView;

      id = R.id.stopwatch_lap;
      MyTextView stopwatchLap = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchLap == null) {
        break missingId;
      }

      id = R.id.stopwatch_list;
      MyRecyclerView stopwatchList = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchList == null) {
        break missingId;
      }

      id = R.id.stopwatch_play_pause;
      ImageView stopwatchPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchPlayPause == null) {
        break missingId;
      }

      id = R.id.stopwatch_reset;
      ImageView stopwatchReset = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchReset == null) {
        break missingId;
      }

      id = R.id.stopwatch_sorting_indicator_1;
      ImageView stopwatchSortingIndicator1 = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchSortingIndicator1 == null) {
        break missingId;
      }

      id = R.id.stopwatch_sorting_indicator_2;
      ImageView stopwatchSortingIndicator2 = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchSortingIndicator2 == null) {
        break missingId;
      }

      id = R.id.stopwatch_sorting_indicator_3;
      ImageView stopwatchSortingIndicator3 = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchSortingIndicator3 == null) {
        break missingId;
      }

      id = R.id.stopwatch_sorting_indicators_holder;
      ConstraintLayout stopwatchSortingIndicatorsHolder = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchSortingIndicatorsHolder == null) {
        break missingId;
      }

      id = R.id.stopwatch_time;
      MyTextView stopwatchTime = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchTime == null) {
        break missingId;
      }

      return new FragmentStopwatchBinding((ConstraintLayout) rootView, stopwatchFragment,
          stopwatchLap, stopwatchList, stopwatchPlayPause, stopwatchReset,
          stopwatchSortingIndicator1, stopwatchSortingIndicator2, stopwatchSortingIndicator3,
          stopwatchSortingIndicatorsHolder, stopwatchTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
