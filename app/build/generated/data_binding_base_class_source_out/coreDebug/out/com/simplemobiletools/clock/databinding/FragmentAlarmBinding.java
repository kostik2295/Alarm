// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyFloatingActionButton;
import com.simplemobiletools.commons.views.MyRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAlarmBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MyFloatingActionButton alarmFab;

  @NonNull
  public final CoordinatorLayout alarmFragment;

  @NonNull
  public final RelativeLayout alarmHolder;

  @NonNull
  public final MyRecyclerView alarmsList;

  @NonNull
  public final Button button;

  @NonNull
  public final Button button2;

  private FragmentAlarmBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MyFloatingActionButton alarmFab, @NonNull CoordinatorLayout alarmFragment,
      @NonNull RelativeLayout alarmHolder, @NonNull MyRecyclerView alarmsList,
      @NonNull Button button, @NonNull Button button2) {
    this.rootView = rootView;
    this.alarmFab = alarmFab;
    this.alarmFragment = alarmFragment;
    this.alarmHolder = alarmHolder;
    this.alarmsList = alarmsList;
    this.button = button;
    this.button2 = button2;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAlarmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAlarmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_alarm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAlarmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alarm_fab;
      MyFloatingActionButton alarmFab = ViewBindings.findChildViewById(rootView, id);
      if (alarmFab == null) {
        break missingId;
      }

      CoordinatorLayout alarmFragment = (CoordinatorLayout) rootView;

      id = R.id.alarm_holder;
      RelativeLayout alarmHolder = ViewBindings.findChildViewById(rootView, id);
      if (alarmHolder == null) {
        break missingId;
      }

      id = R.id.alarms_list;
      MyRecyclerView alarmsList = ViewBindings.findChildViewById(rootView, id);
      if (alarmsList == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      return new FragmentAlarmBinding((CoordinatorLayout) rootView, alarmFab, alarmFragment,
          alarmHolder, alarmsList, button, button2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
