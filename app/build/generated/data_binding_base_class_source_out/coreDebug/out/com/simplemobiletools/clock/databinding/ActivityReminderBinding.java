// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReminderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MyTextView dismissLabel;

  @NonNull
  public final ImageView reminderDismiss;

  @NonNull
  public final ImageView reminderDraggable;

  @NonNull
  public final ImageView reminderDraggableBackground;

  @NonNull
  public final MyTextView reminderGuide;

  @NonNull
  public final ConstraintLayout reminderHolder;

  @NonNull
  public final ImageView reminderSnooze;

  @NonNull
  public final ImageView reminderStop;

  @NonNull
  public final MyTextView reminderText;

  @NonNull
  public final MyTextView reminderTitle;

  @NonNull
  public final MyTextView snoozeLabel;

  private ActivityReminderBinding(@NonNull ConstraintLayout rootView,
      @NonNull MyTextView dismissLabel, @NonNull ImageView reminderDismiss,
      @NonNull ImageView reminderDraggable, @NonNull ImageView reminderDraggableBackground,
      @NonNull MyTextView reminderGuide, @NonNull ConstraintLayout reminderHolder,
      @NonNull ImageView reminderSnooze, @NonNull ImageView reminderStop,
      @NonNull MyTextView reminderText, @NonNull MyTextView reminderTitle,
      @NonNull MyTextView snoozeLabel) {
    this.rootView = rootView;
    this.dismissLabel = dismissLabel;
    this.reminderDismiss = reminderDismiss;
    this.reminderDraggable = reminderDraggable;
    this.reminderDraggableBackground = reminderDraggableBackground;
    this.reminderGuide = reminderGuide;
    this.reminderHolder = reminderHolder;
    this.reminderSnooze = reminderSnooze;
    this.reminderStop = reminderStop;
    this.reminderText = reminderText;
    this.reminderTitle = reminderTitle;
    this.snoozeLabel = snoozeLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dismiss_label;
      MyTextView dismissLabel = ViewBindings.findChildViewById(rootView, id);
      if (dismissLabel == null) {
        break missingId;
      }

      id = R.id.reminder_dismiss;
      ImageView reminderDismiss = ViewBindings.findChildViewById(rootView, id);
      if (reminderDismiss == null) {
        break missingId;
      }

      id = R.id.reminder_draggable;
      ImageView reminderDraggable = ViewBindings.findChildViewById(rootView, id);
      if (reminderDraggable == null) {
        break missingId;
      }

      id = R.id.reminder_draggable_background;
      ImageView reminderDraggableBackground = ViewBindings.findChildViewById(rootView, id);
      if (reminderDraggableBackground == null) {
        break missingId;
      }

      id = R.id.reminder_guide;
      MyTextView reminderGuide = ViewBindings.findChildViewById(rootView, id);
      if (reminderGuide == null) {
        break missingId;
      }

      ConstraintLayout reminderHolder = (ConstraintLayout) rootView;

      id = R.id.reminder_snooze;
      ImageView reminderSnooze = ViewBindings.findChildViewById(rootView, id);
      if (reminderSnooze == null) {
        break missingId;
      }

      id = R.id.reminder_stop;
      ImageView reminderStop = ViewBindings.findChildViewById(rootView, id);
      if (reminderStop == null) {
        break missingId;
      }

      id = R.id.reminder_text;
      MyTextView reminderText = ViewBindings.findChildViewById(rootView, id);
      if (reminderText == null) {
        break missingId;
      }

      id = R.id.reminder_title;
      MyTextView reminderTitle = ViewBindings.findChildViewById(rootView, id);
      if (reminderTitle == null) {
        break missingId;
      }

      id = R.id.snooze_label;
      MyTextView snoozeLabel = ViewBindings.findChildViewById(rootView, id);
      if (snoozeLabel == null) {
        break missingId;
      }

      return new ActivityReminderBinding((ConstraintLayout) rootView, dismissLabel, reminderDismiss,
          reminderDraggable, reminderDraggableBackground, reminderGuide, reminderHolder,
          reminderSnooze, reminderStop, reminderText, reminderTitle, snoozeLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
