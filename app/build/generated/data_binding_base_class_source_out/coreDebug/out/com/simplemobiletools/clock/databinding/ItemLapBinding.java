// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.clock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.clock.R;
import com.simplemobiletools.commons.views.MyTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout lapHolder;

  @NonNull
  public final MyTextView lapLapTime;

  @NonNull
  public final MyTextView lapOrder;

  @NonNull
  public final MyTextView lapTotalTime;

  private ItemLapBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout lapHolder,
      @NonNull MyTextView lapLapTime, @NonNull MyTextView lapOrder,
      @NonNull MyTextView lapTotalTime) {
    this.rootView = rootView;
    this.lapHolder = lapHolder;
    this.lapLapTime = lapLapTime;
    this.lapOrder = lapOrder;
    this.lapTotalTime = lapTotalTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLapBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_lap, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout lapHolder = (ConstraintLayout) rootView;

      id = R.id.lap_lap_time;
      MyTextView lapLapTime = ViewBindings.findChildViewById(rootView, id);
      if (lapLapTime == null) {
        break missingId;
      }

      id = R.id.lap_order;
      MyTextView lapOrder = ViewBindings.findChildViewById(rootView, id);
      if (lapOrder == null) {
        break missingId;
      }

      id = R.id.lap_total_time;
      MyTextView lapTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (lapTotalTime == null) {
        break missingId;
      }

      return new ItemLapBinding((ConstraintLayout) rootView, lapHolder, lapLapTime, lapOrder,
          lapTotalTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
